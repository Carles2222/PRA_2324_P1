#ifndef LIST_H
#define LIST_H

template <typename T> 
class List {
public:
    virtual ~List() {}  // Destructor virtual para limpiar adecuadamente

    // Métodos virtuales puros
    virtual void insert(const T& item) = 0;   // Insertar un elemento en la lista
    virtual void remove(const T& item) = 0;   // Eliminar un elemento de la lista
    virtual T get(int index) const = 0;       // Obtener un elemento por índice
    virtual int size() const = 0;             // Obtener el tamaño de la lista
    virtual bool isEmpty() const = 0;         // Verificar si la lista está vacía
};

#endif

